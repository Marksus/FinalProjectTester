Макаров Александр Николаевич


Какова разница между абстрактным классом и интерфейсом? 

	Если в классе нет необходимости реализовывать метод или методы, то их можно объявить абстрактными с помощью ключегого слова abstract. Класс при этом так же следует объявить абстрактным. Нельзя создавать экзепляры абстрактных классов.
	В отличии от абстрактного класса в интерфейсе в принципе нельзя реализовать методы, только описать их, однако можно создавать константы. В интерфейе все поля по умолчанию являются final static.

Как «насильно» вызвать сборку мусора? 

	В java созданные объекты нелься удалить вручную, за нас это делает специальный сборщик мусора, встроенный в jvm. Объект подлежит удалению, если в выполняемой программе отсутствуют ссылки на него.
	Сборщик мусора можно запустить принудительно с помощью Runtime.gc()
	Но это не гарантирует начало его работы на 100%

Когда требуется явное приведение классов?

	В java позволено приводить классы к различным типам, что обеспечивает полиморфизм. 
	На основе описания классов в ссылочной переменной компилятор проверяет, сужает или расширяет возможности класса программист, объявляющий переменную. 
	Если переменной суперкласса присваивается объект подкласса, возможности класса
сужаются, и компилятор без проблем позволяет программисту сделать это. 
	Если, наоборот, объект суперкласса присваивается переменной подкласса, возможности класса расширяются, поэтому программист должен подтвердить это с помощью обозначения, предназначенного для приведения типов, указав в скобках имя подкласса.
 
Чем конструкторы отличаются от других методов? 

	Консруктор это код, вызываемый при создании экземпляра класса. 
	Называется по имени класса и может принимать параметры.
	Если конструктор не прописывать специально, то неявно создается конструктор по умолчанию, без параметров. Однако если есть хоть один конструктор с параметрами, то, если это необходимо, конструктор без параметров прописывается вручную.
	У класса могут присутствовать несколько конструкторов, но все они должны принимать различный набор параметров. Такой конструктор называется перегруженным.
	Конструктор при создании экземпляра класса исполняются только один раз, только при создании экземпляра.
	

Можно ли вызывать конструкторы один из другого, если их в классе несколько? 

	Можно, к примеру дэфолтный конструктор может вызывать конструктор с параметрами, передавая ему какие либо значения, принятые по умолчанию.

В чем разница между JDK и JRE? 

	JRE — содержит в себе JVM (виртуальная машина java, которая интерпретирует байт-код) и стандартные библиотеки java.
	JDK содержит в себе JRE плюс инструменты для разработчика, такие как:
	java (запускает нашу программу)
	javac (компиллятор)
	javadoc (создает документацию)
	и т.д.
	,а так же содержит исходные коды стандартной библиотеки и примеры.

Имеет ли значение в каком порядке перехватывать исключения FileNotFoundException и IOException? 
	Ислючения — это объекты, которые содержат информацию о возникшей исключительной ситуации, бываю проверяемыми и непроверяемыми. Проверяемые следует обрабатывать на стадии написания программы. Это возможно либо с помощью блока try-catch, либо с помощью ключевого слова throws. В блоках catch для каждого исключения по порядку описываются действия по их обработке (с версии java 1.5 можно использовать multi-catch, здесь все исключения прописываются в одном блоке через вертикальную черту), причем под каждый описанный тип исключения попадают так же его подтипы. Исключение FileNotFoundException (означает, что требуемый файл не обнаружен) является подтипом IOException. Расположенная перед FileNotFoundException, IOException перехватит его.

Могут ли внутренние классы, описанные внутри метода, иметь доступ к локальным переменным этого метода? 

	Внутренним называется класс, описанный в теле другого класса.
	Внутренний класс описанный внутри метода является либо локальным, либо анонимным, они имеют доступ как ко всем полям внешнего класса, так и к локальным переменным, объявленным внутри этого метода.

Как подкласс может обратиться к методу или конструктору из суперкласса? 

	Подкласс может обратиться к методу суперкласса с помощью super.назв_метода()
	к конструктору суперкласса — super(). Так можно обратится только к ближайшему вышестоящему родительскому классу, super.super не работает.

В чем разница между очередью и стеком? 
	Очередь и стек являются коллекциями, в основе которых LinkedList
	Очередь работает по принципу первый пришел — первый ушел (first in — first out), стек — по принципу последний пришел, последний ушел(last in — first out).

Что вам приходит в голову, когда вы слышите о новом поколении (young generation) в Java? 

	В jvm память состоит из стека (в нем хранится очередь вызова методов и переменные) и кучи (в ней хранятся объекты). В свою очередь куча делится на две области young genreration (в этой области размещаются только что созданные объекты) и old generation (сюда перемещаются объекты пережившие несколько сборок мусора). В young  сборки мусора происходят чаще,  поскольку здесь они происходят быстрее и эффективнее, так как большинство объектов здесь являются мусором.

Есть два класса: A и B. Класс B должен информировать класс A когда случается некое важное событие. Какой design-pattern вы должны реализовать? 

	Design-pattern (шаблон проектирования) это некая конструкция подходящая для решения часто встречающихся похожих задач.
	Я полагаю должен использоваться шаблон Состояние(State)
	Паттерн состоит из 3 блоков:
	А— класс объекты которого должны менять свое поведение в зависимости от состояния.
	IState — интерфейс, который должен реализовать каждое из конкретных состояний. Через этот интерфейс объект А взаимодействует с состоянием, делегируя ему вызовы методов. Интерфейс должен содержать средства для обратной связи с объектом, поведение которого нужно изменить. Для этого используется событие . Это необходимо для того, чтобы в процессе выполнения программы заменять объект состояния при появлении событий. Возможны случаи, когда сам А периодически опрашивает объект состояние на наличие перехода.
	StateA … StateZ — классы конкретных состояний. Должны содержать информацию о том, при каких условиях и в какие состояния может переходить объект из текущего состояния. Например, из StateA объект может переходить в состояние StateB и StateC, а из StateB — обратно в StateA и так далее. Объект одного из них должен содержать А при создании.


Какой модификатор доступа надо указать в классе, чтобы доступ к нему имели только классы из того же пакета? 
	
	Модификатор доступа определяет область видимости класса.
	Прописывается перед ключевым словомм class
	Существуют три модификатора доступа к классу:
		public — виден отовсюду
		protected — класс доступен только классам из того же пакета и классам 	наследникам
		(default) — видимость только внутри пакета

Чем отличается статический внутренний класс от просто внутреннего класса? 

	Внутренним классом называется класс, описанный в теле внешнего класса.
	Используются для упрощения кода.
	К полям и методам статического внутреннего класса есть доступ даже без создания экземляра внешнего класса, в отличии от нестатического. Внутренний статический класс не имеет доступа к нестатическим полям и методам кнешнего класса, только по переданной ему ссылке на экземпляр внешнего класса. Внутренний нестатический класс можно создать без создания экземпляра внешнего класса.

можно ли обратиться к не-статической переменной из статического метода? 

	К статическому методу можно обращаться без создания экземпляра класса, в то же время как нестатическая переменная существует только в созданном экземпляре. Однако, статическому методу можно передать ссылку на созданный объект, тогда метод может работать со всеми доступными переменными этого объекта.

какие типы данных есть в Java? 

	В java существуют примитивные и ссылочные типы данных.
	Переменные примитивного типа содержат значение в самих себе.
	Ссылочные же содержат в себе ссылку на объект и информацию о классе этого объкта.
	Примитивы бывают: логические(boolean), целочисленные(byte — 8 бит, short — 16 бит, int — 32 бит, long - 64), с плавающей точкой(float — 32 бит, double — 64 бит), символьные (char — 16 бит) . Их размер одинаков для всех платформ.

	В java данные передаются по значению, это означает что при каком либо воздействии на переменную примитивного типа мы изменяем ее значение. При манипуляции с ссылочной переменной, мы воздействуем только на ссылку на объект, но не на сам объект, таким образом возможно множество переменных, ссылающихся на один объект.

Чем отличаются переопределение (Override) и перегрузка (Overload) 

	Переопределение метода возможно при наследовании. Переопределением метода является использование в подклассе метода с сигнатурой одинаковой с методом  класса родителя. Чтобы компиллятор проверял правильность переопределения метода, следует дописать над ним аннотацию @Override. Если новый метод имеет другой набор передаваемых параметров, то это будет являться перегрузкой метода. Будут работать оба метода, причем вызван будет тот метод, которому соответствуют передаваемые параметры.
	Перегрузкой является использование в коде нескольких методов с одинаковыми названиями, но разными передаваемыми аргументами.

Что такое итератор? 

	Коллекции — хранилище объектов (точнее ссылок на объекты), обеспечивающее их эффективное добавление, изменение или удаление.
	Итератор позволяет перебирать коллекции с возможностью удаления объектов (при переборе с помощью foreach этого делать нельзя) 

Перечислите основные категории исключительных ситуаций 

	Исключительные ситуации в java представляют собой объекты,  являющиеся подклассами встроенного класса Throwable. От него наследуются класс Error(ошибки среды исполнения, такие как например переполнение памяти) и класс Exception (исключения, которые могут обрабатываться выполняемой программой). 
	В свою очередь исключения Exception по типу делятся на непроверяемые и проверяемые исключения. 
	Непроверяемыми исключениями называются ошибки времени выполнения (RuntimeException) (например деление на ноль, выход за границы массива, неправильное использование нулевой ссылки и т. д.). 
	Проверямые исключения (такие как ClassNotFoundException, CloneNotSupportedException, InstantiationException и т. д.)программист обязан обработать в программе с помощью блока try-catch, либо с помощью throws обозначить, что при возникновении исключительной ситуации (описанной после throws) метод должен ее пробросить выше. 

Какая разница между throw и throws? 

	throw и throws используются при обработке исключительных ситуаций.
	throw это проброс исключения внутри метода, как реакцию на какое либо событие, вынуждает написать обработку этого исключения.
	 throws же один из способов обработки (помимо try-catch), означает что, если в методе возникнет описанная исключительная ситуация, метод пробросит её дальше, и обрабатывать ее будет вынужден метод вызвавший данный метод со throws.

Зачем нужен блок finally? 

	При возникновении исключительной сиуации метод прекращает свое дальнейшее действие. Блок finally это необязательная часть блока try-catch, в нем производяться действия небходимые для корректного завершения работы метода, например такие как сохранение важных данных или закрыытие потоков данных.

Что такое finalize? 

	Перед уничтожением объекта сборщиком мусора, у объекта вызывается метод finalize(). Этот метод прописан в классе Object  и не содержит реализации, его можно переопределить. Использование не рекомендуется из-за непредсказуемости.

Перечислите все виды внутренних классов 

- обычный внутренний класс (класс описанный в теле внешнего класса, имеет доступ ко всем переменным и методам внешнего класса)
- локальный класс(класс описанный в теле метода)
- анонимный класс (класс, описанный в теле метода, без создания ссылочной переменной для него)
- внутренний статический класс
